{"version":3,"sources":["components/ComponentOne.js","components/ComponentTwo.js","components/ComponentThree.js","components/ComponentFour.js","App.js","serviceWorker.js","index.js"],"names":["ComponentOne","className","ComponentTwo","ComponentThree","ComponentFour","App","tabMenu","linkText","component","useState","page","setPage","getPage","map","props","i","key","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yLAgBeA,G,KAdM,WACnB,OACE,yBAAKC,UAAU,aACb,6CACA,+dCaSC,EAjBM,WACnB,OACE,yBAAKD,UAAU,aACb,6CACA,q8BCaSE,EAjBQ,WACrB,OACE,yBAAKF,UAAU,aACb,+CACA,w+BCYSG,EAhBO,WACpB,OACE,yBAAKH,UAAU,aACb,8CACA,kvBC8BSI,EA5BH,WACV,IAAMC,EAAU,CACd,CAACC,SAAU,gBAAiBC,UAAW,kBAAC,EAAD,OACvC,CAACD,SAAU,gBAAiBC,UAAW,kBAAC,EAAD,OACvC,CAACD,SAAU,kBAAmBC,UAAW,kBAAC,EAAD,OACzC,CAACD,SAAU,iBAAkBC,UAAW,kBAAC,EAAD,QAL1B,EAQQC,mBAAS,GARjB,mBAQTC,EARS,KAQHC,EARG,KASVC,EAAUN,EAAQI,GAAQJ,EAAQI,GAAMF,UAAY,KAE1D,OACE,yBAAKP,UAAU,OACb,6BACE,4BACGK,EAAQO,KAAI,SAACC,EAAOC,GAAR,OACX,wBAAId,UAAS,eAAUc,IAAML,EAAO,SAAW,IAAMM,IAAKD,EAAGE,QAAS,kBAAMN,EAAQI,KACjFD,EAAMP,eAMf,yBAAKN,UAAU,aAAaW,KCnBdM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.e6a2a738.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ComponentOne = () => {\r\n  return(\r\n    <div className=\"component\">\r\n      <h1>Component One</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident,\r\n        sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ComponentOne","import React from 'react';\r\n\r\nconst ComponentTwo = () => {\r\n  return(\r\n    <div className=\"component\">\r\n      <h1>Component Two</h1>\r\n      <p>Consectetur libero id faucibus nisl tincidunt eget. Nunc non blandit massa enim nec dui nunc mattis. \r\n        Risus nec feugiat in fermentum posuere urna nec tincidunt. Luctus accumsan tortor posuere ac ut consequat semper. \r\n        Congue eu consequat ac felis donec et odio. At auctor urna nunc id cursus metus aliquam. Libero enim sed faucibus turpis in. \r\n        Leo vel fringilla est ullamcorper eget. Cursus mattis molestie a iaculis at. Nunc id cursus metus aliquam eleifend mi in nulla posuere. \r\n        Convallis posuere morbi leo urna molestie at. Pulvinar mattis nunc sed blandit libero. Orci porta non pulvinar neque laoreet suspendisse interdum. \r\n        Pharetra pharetra massa massa ultricies mi quis hendrerit dolor. Neque convallis a cras semper auctor neque vitae tempus. \r\n        Id donec ultrices tincidunt arcu non sodales neque sodales. Eget arcu dictum varius duis at consectetur lorem. \r\n        Dolor sit amet consectetur adipiscing elit duis tristique sollicitudin nibh.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ComponentTwo","import React from 'react';\r\n\r\nconst ComponentThree = () => {\r\n  return(\r\n    <div className=\"component\">\r\n      <h1>Component Three</h1>\r\n      <p>Sagittis id consectetur purus ut faucibus pulvinar elementum integer. Id aliquet lectus proin nibh nisl. \r\n        Ut ornare lectus sit amet est placerat in egestas. Amet nulla facilisi morbi tempus iaculis urna id volutpat. \r\n        Facilisis gravida neque convallis a cras semper auctor neque vitae. Id ornare arcu odio ut sem nulla pharetra diam sit. \r\n        Dui id ornare arcu odio. Elementum nibh tellus molestie nunc non blandit. Nunc eget lorem dolor sed viverra ipsum nunc aliquet. \r\n        Nunc id cursus metus aliquam eleifend. Sagittis vitae et leo duis ut diam quam nulla porttitor. Vestibulum lorem sed risus ultricies. \r\n        Parturient montes nascetur ridiculus mus mauris vitae. A iaculis at erat pellentesque adipiscing commodo elit at. \r\n        Sodales ut eu sem integer vitae justo eget magna fermentum. Donec et odio pellentesque diam volutpat commodo sed. \r\n        Egestas pretium aenean pharetra magna. Donec ultrices tincidunt arcu non sodales. Ullamcorper morbi tincidunt ornare massa eget egestas purus.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ComponentThree","import React from 'react';\r\n\r\nconst ComponentFour = () => {\r\n  return(\r\n    <div className=\"component\">\r\n      <h1>Component Four</h1>\r\n      <p>\r\n        Donec ultrices tincidunt arcu non sodales neque sodales ut. Consectetur purus ut faucibus pulvinar. \r\n        Amet nulla facilisi morbi tempus iaculis. Risus commodo viverra maecenas accumsan lacus vel facilisis. \r\n        Nulla facilisi etiam dignissim diam quis enim lobortis scelerisque fermentum. Molestie nunc non blandit massa enim nec. \r\n        Ultrices neque ornare aenean euismod elementum. Id leo in vitae turpis massa sed elementum tempus. Consectetur libero id faucibus nisl tincidunt. \r\n        Enim lobortis scelerisque fermentum dui. Elit ut aliquam purus sit amet. Quis risus sed vulputate odio ut enim blandit. Sed nisi lacus sed viverra tellus. \r\n        Urna molestie at elementum eu facilisis sed odio morbi. Purus in mollis nunc sed id semper risus.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ComponentFour","import React, {useState} from 'react';\nimport './App.scss';\n\nimport ComponentOne from './components/ComponentOne';\nimport ComponentTwo from './components/ComponentTwo';\nimport ComponentThree from './components/ComponentThree';\nimport ComponentFour from './components/ComponentFour';\n\nconst App = () => {\n  const tabMenu = [\n    {linkText: 'Component One', component: <ComponentOne />},\n    {linkText: 'Component Two', component: <ComponentTwo />},\n    {linkText: 'Component Three', component: <ComponentThree />},\n    {linkText: 'Component Four', component: <ComponentFour />},\n  ];\n\n  const [page, setPage] = useState(0);\n  const getPage = tabMenu[page] ? tabMenu[page].component : null;\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <ul>\n          {tabMenu.map((props, i) => (\n            <li className={`link ${i === page ? 'active' : ''}`} key={i} onClick={() => setPage(i)}>\n              {props.linkText}\n            </li>\n          ))}\n        </ul>\n      </nav>\n\n      <div className=\"container\">{getPage}</div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}